[build-system]
requires = ["flit"]
build-backend = "flit.buildapi"

[tool.flit.metadata]
module = "clima"
author = "Joni Turunen"
author-email = "rojun.itu@gmail.com"
home-page = "https://github.com/d3rp/clima.git"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
]
requires = ["fire==0.1.3"]
description-file = "README.md"
requires-python = ">=3.5"
keywords = "cli template command schema fire quick simple command-line"

[tool.flit.metadata.requires-extra]
dev = ["pytest"]
test = ["pytest"]


[tool.flit.scripts]

[tool.flit.entrypoints]

[tool.poetry]
name = "clima"
version = "0.5.2"
description = "Simple boilerplate for cli scripts"
keywords = ["cli"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
]
homepage = "https://github.com/d3rp/clima.git"
authors = ["Joni Turunen <rojun.itu@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.6"
pytest-watch = "^4.2"
bleach = ">=3.1.5"
#fire = "==0.1.3"
tabulate = "^0.8.7"
six = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
twine = "*"
hypothesis = "*"
mock = "*"
python-Levenshtein = "*"

[tool.poetry.extras]
tests = ["pytest"]






[tool.dephell.flittopoetry]
from = {format = "flit", path = "pyproject.toml"}
to = {format = "poetry", path = "pyproject.toml"}

# dephell deps convert --env flit
[tool.dephell.flit]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "flit", path = "pyproject.toml"}

# dephell deps convert --env pip
[tool.dephell.pip]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "pip", path = "requirements.txt"}

# dephell deps convert --env setuppy
[tool.dephell.setuppy]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

# dephell deps convert --env pipenv
[tool.dephell.pipenv]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "pipfile", path = "Pipfile"}

[tool.dephell.main]
versioning = "semver"
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetry", path = "pyproject.toml"}

[tool.dephell.pytest]
from = {format = "poetry", path = "pyproject.toml"}
tests = ["tests", "README.md"]
envs = ["main", "tests"]
command = "python -m pytest -x tests/"
